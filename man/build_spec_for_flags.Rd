% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spec_build.R
\name{build_spec_for_flags}
\alias{build_spec_for_flags}
\title{Construir especificación de flags de missing a partir de ODK}
\usage{
build_spec_for_flags(
  datos,
  ODK_filtrado,
  usar_col = if ("relevance_final" \%in\% names(ODK_filtrado)) "relevance_final" else
    "relevance"
)
}
\arguments{
\item{datos}{data.frame o tibble con los datos recolectados.}

\item{ODK_filtrado}{data.frame o tibble del cuestionario ODK previamente
filtrado a los tipos de pregunta relevantes (\code{select}, \code{integer},
\code{text}, \code{begin group}, \code{end group}).}

\item{usar_col}{(chr) nombre de la columna de relevancia a usar. Por defecto
se prioriza \code{relevance_final} si existe en \code{ODK_filtrado}, en
caso contrario se usa \code{relevance}.}
}
\value{
Una lista con dos elementos:
\describe{
\item{spec_for_flags}{tibble con las reglas por variable objetivo:
\code{var}, \code{when_vars}, \code{when_values}, \code{how},
y \code{manual_expr}.}
\item{datos_tokens}{data.frame igual a \code{datos} pero con las columnas
adicionales creadas para tokens de relevancia (dummies de opciones
múltiples, comparadores, etc.).}
}
}
\description{
Esta función toma un data.frame de datos y un cuestionario ODK filtrado
(con columnas de metadatos como \code{type}, \code{name}, \code{relevance}, etc.) y genera
una especificación (\code{spec_for_flags}) adecuada para ser utilizada con la
función \code{flags_missing_por_variable()}.
}
\details{
El flujo incluye:
\itemize{
\item Traducción de expresiones de relevancia ODK a tokens estandarizados
(\code{selected()}, \code{not(selected())}, \code{=}, \code{!=},
y comparadores \code{>, >=, <, <=}).
\item Creación de variables dummy para los comparadores (\code{X > 4}, etc.)
directamente en los datos.
\item Creación de dummies faltantes (tokens que aparecen en la relevancia
pero no existen en los datos) inicializados en cero.
\item Inclusión de todas las variables obligatorias: si una pregunta no
tiene condición de relevancia, igualmente se agrega al spec con
\code{when_vars = character(0)} y \code{when_values = list()} para
que sea evaluada como obligatoria en todo caso.
}
}
\examples{
\dontrun{
res <- build_spec_for_flags(datos, ODK_filtrado)
spec_for_flags <- res$spec_for_flags
datos_tokens   <- res$datos_tokens

out <- flags_missing_por_variable(
  data          = datos_tokens,
  spec          = spec_for_flags,
  prefix        = "m",
  numeric_conds = TRUE,
  coerce_target = FALSE
)
}

}
